[{"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/index.tsx":"1","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/reportWebVitals.ts":"2","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/App.tsx":"3","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoice.tsx":"4","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoiceWrapper.tsx":"5","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/Navbar.tsx":"6","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/ScreenContainer.tsx":"7","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/HistoryWrapper.tsx":"8","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/History.tsx":"9","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/VideosWrapper.tsx":"10"},{"size":500,"mtime":1642954827421,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1642715585611,"results":"13","hashOfConfig":"12"},{"size":169,"mtime":1642956379757,"results":"14","hashOfConfig":"12"},{"size":2770,"mtime":1642977566162,"results":"15","hashOfConfig":"12"},{"size":268,"mtime":1642958525125,"results":"16","hashOfConfig":"12"},{"size":995,"mtime":1642976068260,"results":"17","hashOfConfig":"12"},{"size":868,"mtime":1642969050213,"results":"18","hashOfConfig":"12"},{"size":218,"mtime":1642969091631,"results":"19","hashOfConfig":"12"},{"size":1171,"mtime":1642975789210,"results":"20","hashOfConfig":"12"},{"size":2477,"mtime":1642972852965,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"9kxrhb",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/index.tsx",[],["48","49"],"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/reportWebVitals.ts",[],"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/App.tsx",[],"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoice.tsx",["50","51"],"import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nconst SampleChoice: React.FC = () => {\n  const forceUpdate = useForceUpdate();\n  // const [episodeNumber, setEpisodeNumber] = useState<number>(1);\n  const nextEpisodeAvailable = useRef<boolean>(false);\n  const episodeNumber = useRef<number>(1);\n  const submitChoice = (choice: number) => {\n    axios.post(`/human_choice/${choice}`)\n      .then(res => {\n        nextEpisodeAvailable.current = false;\n        episodeNumber.current = res.data.displayed_episode;\n        forceUpdate();\n      });\n  };\n\n  useEffect(()=>{\n    axios.get(`/displayed_episode`)\n      .then(res => {\n        episodeNumber.current = res.data.displayed_episode;\n        forceUpdate();\n      });\n  },[]);\n\n  const checkNewEpisode = () => {\n    axios.get(`/videos/video_two_${episodeNumber.current}.mp4`)\n      .then(() => {\n        nextEpisodeAvailable.current = true;\n        forceUpdate();\n      })\n      .catch(() => {\n        console.log('not yet');\n      });\n  };\n  const buttonStyle = \"bg-indigo-500 hover:bg-blue-500 p-2 active:bg-cyan-500 rounded-xl\";\n  return (\n    <>\n      {nextEpisodeAvailable.current ? \n        <>\n          <div className=\"flex flex-col mx-auto mt-28\">\n            <div className=\"flex flex-row mx-auto mb-10\">\n                Episode {episodeNumber.current}\n            </div>\n            <div className=\"flex flex-row\">\n              <div className=\"flex flex-col mx-4\">\n                <video className=\"rounded-xl\" autoPlay loop muted width=\"320\" height=\"320\" src={`videos/video_one_${episodeNumber.current}.mp4`}/>\n                <button className={`${buttonStyle} mt-2`} onClick={()=>(submitChoice(1))}>1</button>\n                <button className={`${buttonStyle} mt-2`} onClick={()=>(submitChoice(3))}>Equally good</button>\n              </div>\n              <div className=\"flex flex-col mx-4\">\n                <video className=\"rounded-xl\" autoPlay loop muted width=\"320\" height=\"320\" src={`videos/video_two_${episodeNumber.current}.mp4`}/>\n                <button className={`${buttonStyle} mt-2`} onClick={()=>(submitChoice(2))}>2</button>\n                <button className={`${buttonStyle} mt-2`} onClick={()=>(submitChoice(4))}>Discard</button>\n              </div>\n            </div>\n          </div>\n        </>\n      :\n        <div className=\"flex justify-items-center w-screen h-screen\">\n          <button onClick={checkNewEpisode} className={`${buttonStyle} m-auto`}>\n            Go to the next episode\n          </button>\n        </div>\n      }\n    </>\n  );\n};\n\nexport default SampleChoice;\n","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoiceWrapper.tsx",[],"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/Navbar.tsx",["52"],"import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { NavLink } from 'react-router-dom';\nimport HistoryWrapper from './HistoryWrapper';\nimport SampleChoiceWrapper from './SampleChoiceWrapper';\n\nconst links = [\n  { pathname: '/training', text: 'Training', icon: <SampleChoiceWrapper /> },\n  { pathname: '/history', text: 'History', icon: <HistoryWrapper /> },\n];\n\nconst Navbar: React.FC = () => {\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex flex-row\">\n        <div className=\"my-auto bg-indigo-500 p-4 pl-4 pr-8 w-1/3\">Learning From Human Preferences</div>\n        <div className=\"w-full flex flex-row bg-gradient-to-r from-indigo-500 to-blue-600 py-2\">\n          {links.map((link) => (\n            <NavLink to={link.pathname} className=\"my-auto p-2 mx-4 rounded-xl flex flex-col bg-blue-600 outline outlien-black outline-1 hover:bg-blue-700\">{link.text}</NavLink>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/ScreenContainer.tsx",["53","54","55"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect, useHistory, useLocation } from 'react-router-dom';\nimport HistoryWrapper from './HistoryWrapper';\nimport Navbar from './Navbar';\nimport SampleChoiceWrapper from './SampleChoiceWrapper';\nconst ScreenContainer: React.FC = () => {\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          {[\n            { path: '/training', text: '', component: <SampleChoiceWrapper /> },\n            { path: '/history', text: '', component: <HistoryWrapper /> },\n          ].map(({ path, text, component }) => (\n            <Route exact path={path}>\n              <div className=\"h-screen w-full fixed\">\n                <Navbar />\n                {component}\n              </div>\n            </Route>\n          ))}\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default ScreenContainer;","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/HistoryWrapper.tsx",[],"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/History.tsx",["56","57","58"],"import axios from 'axios';\nimport React, { useEffect, useState, useRef } from 'react';\nimport VideosContainer from \"./VideosWrapper\"\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nconst History: React.FC = () => {\n  const episodeNumber = useRef<number>(0);\n  const forceUpdate = useForceUpdate();\n  const [videos, setVideos] = useState<JSX.Element[]>([<></>])\n  var videoList = [<></>];\n  useEffect(()=>{\n    console.log('mount');\n    axios.get(`/episode_number`)\n      .then((res) => {\n        console.log(res.data);\n        // setEpisodeNumber(res.data.episode_number);\n        episodeNumber.current = res.data.episode_number;\n        setVideos(episodeNumber.current > 1 ? [...Array(episodeNumber.current-2)].map((x, i) =>\n          <VideosContainer idx={i+1}/>\n        ) : [<></>]);\n        forceUpdate();\n      });\n  },[]);\n\n\n  return (\n    <div className=\"mx-auto mt-10\">\n      <div className=\"flex flex-col overflow-auto justify-items-center align-center h-4/5 px-6\">\n        {videos}\n      </div>\n    </div>\n  );\n};\n\nexport default History;\n","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/VideosWrapper.tsx",["59","60","61","62"],"import axios from 'axios';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\n\nconst firstChoiceStyle = [\n  \"outline outline-offset-0 outline-green-500 shadow-2xl shadow-green-400\",\n  \"outline outline-offset-0 outline-red-500 opacity-75 shadow-2xl shadow-red-400\",\n  \"outline outline-offset-0 outline-green-300 shadow-xl shadow-green-300\",\n  \"outline outline-offset-0 outline-black-500 opacity-75\"\n];\n\nconst secondChoiceStyle = [\n  \"outline outline-offset-0 outline-red-500 opacity-75 shadow-2xl shadow-red-400\",\n  \"outline outline-offset-0 outline-green-500 shadow-2xl shadow-green-400\",\n  \"outline outline-offset-0 outline-green-300 shadow-xl shadow-green-300\",\n  \"outline outline-offset-0 outline-black-500 opacity-75\"\n];\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nconst VideosContainer: React.FC<{idx:number}> = ({ idx }) => {\n  const forceUpdate = useForceUpdate();\n  const [display, setDisplay] = useState<boolean>(false); \n  const [choice, setChoice] = useState<number>(0);\n  useEffect(()=>{\n    axios.get(`/videos/video_one_${idx}.mp4`)\n      .then(() => {\n        setDisplay(true);\n        forceUpdate();\n      })\n      .catch(()=>{\n        setDisplay(false);\n        forceUpdate();\n      });\n  },[]);\n  useEffect(()=>{\n    axios.get(`/human_choice/${idx}`)\n      .then((res) => {\n        setChoice(res.data.choice-1);\n        forceUpdate();\n      })\n      .catch(()=>{\n        setDisplay(false);\n        forceUpdate();\n      });\n  },[]);\n  \n  return (\n    <>\n      {display ?\n        <LazyLoadComponent threshold={20}>\n          <div className=\"flex flex-row my-4\">\n            <div className=\"flex flex-col\">\n              <div className=\"flex flex-row mx-auto pb-2\">\n                Episode {idx}\n              </div>\n              <div className=\"flex flex-row\">\n                <video className={`rounded-xl mx-4 ${firstChoiceStyle[choice]}`} autoPlay loop muted width=\"140\" height=\"140\" src={`videos/video_one_${idx}.mp4`}/>\n                <video className={`rounded-xl mx-4 ${secondChoiceStyle[choice]}`} autoPlay loop muted width=\"140\" height=\"140\" src={`videos/video_two_${idx}.mp4`}/>\n              </div>\n            </div>\n          </div>\n        </LazyLoadComponent>\n        :\n        <></>\n      }\n    </>\n  );\n};\n\nexport default VideosContainer;\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":5,"column":10,"nodeType":"69","messageId":"70","endLine":5,"endColumn":15},{"ruleId":"71","severity":1,"message":"72","line":29,"column":5,"nodeType":"73","endLine":29,"endColumn":7,"suggestions":"74"},{"ruleId":"67","severity":1,"message":"75","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":14},{"ruleId":"67","severity":1,"message":"76","line":2,"column":50,"nodeType":"69","messageId":"70","endLine":2,"endColumn":58},{"ruleId":"67","severity":1,"message":"77","line":2,"column":60,"nodeType":"69","messageId":"70","endLine":2,"endColumn":70},{"ruleId":"67","severity":1,"message":"78","line":2,"column":72,"nodeType":"69","messageId":"70","endLine":2,"endColumn":83},{"ruleId":"67","severity":1,"message":"68","line":6,"column":10,"nodeType":"69","messageId":"70","endLine":6,"endColumn":15},{"ruleId":"67","severity":1,"message":"79","line":14,"column":7,"nodeType":"69","messageId":"70","endLine":14,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":27,"column":5,"nodeType":"73","endLine":27,"endColumn":7,"suggestions":"80"},{"ruleId":"67","severity":1,"message":"81","line":2,"column":38,"nodeType":"69","messageId":"70","endLine":2,"endColumn":44},{"ruleId":"67","severity":1,"message":"68","line":20,"column":10,"nodeType":"69","messageId":"70","endLine":20,"endColumn":15},{"ruleId":"71","severity":1,"message":"82","line":38,"column":5,"nodeType":"73","endLine":38,"endColumn":7,"suggestions":"83"},{"ruleId":"71","severity":1,"message":"82","line":49,"column":5,"nodeType":"73","endLine":49,"endColumn":7,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"@typescript-eslint/no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'forceUpdate'. Either include it or remove the dependency array.","ArrayExpression",["87"],"'Link' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'videoList' is assigned a value but never used.",["88"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'forceUpdate' and 'idx'. Either include them or remove the dependency array.",["89"],["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"91","fix":"93"},{"desc":"94","fix":"95"},{"desc":"94","fix":"96"},"Update the dependencies array to be: [forceUpdate]",{"range":"97","text":"98"},{"range":"99","text":"98"},"Update the dependencies array to be: [forceUpdate, idx]",{"range":"100","text":"101"},{"range":"102","text":"101"},[927,929],"[forceUpdate]",[946,948],[1411,1413],"[forceUpdate, idx]",[1648,1650]]