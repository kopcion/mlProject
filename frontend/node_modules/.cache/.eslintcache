[{"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/index.tsx":"1","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/reportWebVitals.ts":"2","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/App.tsx":"3","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoice.tsx":"4","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoiceWrapper.tsx":"5","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/Navbar.tsx":"6","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/ScreenContainer.tsx":"7","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/HistoryWrapper.tsx":"8","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/History.tsx":"9","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/VideosWrapper.tsx":"10"},{"size":500,"mtime":1642954827421,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1642715585611,"results":"13","hashOfConfig":"12"},{"size":169,"mtime":1642956379757,"results":"14","hashOfConfig":"12"},{"size":4047,"mtime":1643227567563,"results":"15","hashOfConfig":"12"},{"size":283,"mtime":1643117590859,"results":"16","hashOfConfig":"12"},{"size":995,"mtime":1643227512761,"results":"17","hashOfConfig":"12"},{"size":881,"mtime":1643227538452,"results":"18","hashOfConfig":"12"},{"size":218,"mtime":1642969091631,"results":"19","hashOfConfig":"12"},{"size":1177,"mtime":1643222251263,"results":"20","hashOfConfig":"12"},{"size":2615,"mtime":1643222234980,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"9kxrhb",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/index.tsx",[],["49","50"],"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/reportWebVitals.ts",[],"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/App.tsx",[],"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoice.tsx",["51","52","53"],"import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\nconst sleep = (milliseconds:number) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nconst SampleChoice: React.FC = () => {\n  const forceUpdate = useForceUpdate();\n  const nextEpisodeAvailable = useRef<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const episodeNumber = useRef<number>(0);\n  const submitChoice = (choice: number) => {\n    axios.post(`/human_choice/${choice}/episode/${episodeNumber.current}`)\n      .then(() => {\n        nextEpisodeAvailable.current = false;\n        forceUpdate();\n      });\n  };\n\n  useEffect(()=>{},[]);\n\n  const checkNewEpisode = () => {\n    new Promise(async ()=>{\n      for (var i = 0; i < 200; i++) {\n        console.log(i);\n        await axios.get('/episode_number')\n          .then((res) => {\n            if(episodeNumber.current < res.data.episode_number){\n              console.log(res.data);\n              episodeNumber.current = res.data.episode_number;\n              nextEpisodeAvailable.current = !res.data.voted;\n              i=200;\n              setLoading(false);\n            }\n          })\n          .catch(() => {\n            console.log('not yet');\n          });\n        await sleep(1000);\n      }\n      setLoading(false);\n    });\n    console.log('refreshing');\n    setLoading(true);\n  };\n  const buttonStyle = \"bg-indigo-500 hover:bg-blue-500 p-2 active:bg-cyan-500 rounded-xl\";\n  return (\n    <>\n      {nextEpisodeAvailable.current ? \n        <>\n          <div className=\"flex flex-col mx-auto mt-28\">\n            <div className=\"flex flex-row mx-auto mb-10\">\n                Episode {episodeNumber.current}\n            </div>\n            <div className=\"flex flex-row\">\n              <div className=\"flex flex-col mx-4\">\n                <video onLoad={()=>(document.querySelectorAll(\"video\").forEach(v=>(v.playbackRate=0.7)))} className=\"rounded-xl\" autoPlay loop muted width=\"320\" height=\"320\" src={`http://127.0.0.1:8080/video_one_${episodeNumber.current}.mp4`}/>\n                <button className={`${buttonStyle} mt-2`} onClick={()=>(submitChoice(1))}>1</button>\n                <button className={`${buttonStyle} mt-2`} onClick={()=>(submitChoice(3))}>Equally good</button>\n              </div>\n              <div className=\"flex flex-col mx-4\">\n                <video onLoad={()=>(document.querySelectorAll(\"video\").forEach(v=>(v.playbackRate=0.7)))} className=\"rounded-xl\" autoPlay loop muted width=\"320\" height=\"320\" src={`http://127.0.0.1:8080/video_two_${episodeNumber.current}.mp4`}/>\n                <button className={`${buttonStyle} mt-2`} onClick={()=>(submitChoice(2))}>2</button>\n                <button className={`${buttonStyle} mt-2`} onClick={()=>(submitChoice(4))}>Discard</button>\n              </div>\n            </div>\n          </div>\n        </>\n      :\n        <div className=\"flex justify-items-center w-screen h-screen\">\n          {loading ? \n          <button type=\"button\" className={`${buttonStyle} m-auto flex flex-row bg-blue-500`} disabled>\n            <svg className=\"animate-spin h-10 w-10 mr-3\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n            <p className=\"my-auto\">Next episode is being rendered...</p>\n          </button>\n          : \n          <button onClick={checkNewEpisode} className={`${buttonStyle} m-auto`}>\n            Go to the next episode\n          </button>\n          }\n          </div>\n        }\n    </>\n  );\n};\n\nexport default SampleChoice;\n","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoiceWrapper.tsx",["54"],"import React, { useEffect } from 'react';\nimport SampleChoice from './SampleChoice';\n\n\nconst SampleChoiceWrapper: React.FC = () => {\n  return (\n    <div className=\"flex justify-items-center align-center\">\n      <SampleChoice/>\n    </div>\n  );\n};\n\nexport default SampleChoiceWrapper;\n","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/Navbar.tsx",["55"],"import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { NavLink } from 'react-router-dom';\nimport HistoryWrapper from './HistoryWrapper';\nimport SampleChoiceWrapper from './SampleChoiceWrapper';\n\nconst links = [\n  { pathname: '/training', text: 'Training', icon: <SampleChoiceWrapper /> },\n  { pathname: '/history', text: 'History', icon: <HistoryWrapper /> },\n];\n\nconst Navbar: React.FC = () => {\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex flex-row\">\n        <div className=\"my-auto bg-indigo-500 p-4 pl-4 pr-8 w-1/3\">Learning From Human Preferences</div>\n        <div className=\"w-full flex flex-row bg-gradient-to-r from-indigo-500 to-blue-600 py-2\">\n          {links.map((link) => (\n            <NavLink to={link.pathname} className=\"my-auto p-2 mx-4 rounded-xl flex flex-col bg-blue-600 outline outline-black outline-1 hover:bg-blue-700\">{link.text}</NavLink>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/ScreenContainer.tsx",["56","57","58"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect, useHistory, useLocation } from 'react-router-dom';\nimport HistoryWrapper from './HistoryWrapper';\nimport Navbar from './Navbar';\nimport SampleChoiceWrapper from './SampleChoiceWrapper';\nconst ScreenContainer: React.FC = () => {\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          {[\n            { path: '/training', text: '', component: <SampleChoiceWrapper /> },\n            { path: '/history', text: '', component: <HistoryWrapper /> },\n          ].map(({ path, text, component }) => (\n            <Route exact path={path}>\n              <div className=\"h-screen w-full fixed text-cyan-50\">\n                <Navbar />\n                {component}\n              </div>\n            </Route>\n          ))}\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default ScreenContainer;","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/HistoryWrapper.tsx",[],"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/History.tsx",["59","60","61"],"import axios from 'axios';\nimport React, { useEffect, useState, useRef } from 'react';\nimport VideosContainer from \"./VideosWrapper\"\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nconst History: React.FC = () => {\n  const episodeNumber = useRef<number>(0);\n  const forceUpdate = useForceUpdate();\n  const [videos, setVideos] = useState<JSX.Element[]>([<></>])\n  var videoList = [<></>];\n  useEffect(()=>{\n    console.log('mount');\n    axios.get(`/history_size`)\n      .then((res) => {\n        console.log(res.data);\n        episodeNumber.current = res.data.records;\n        setVideos(episodeNumber.current > 1 ? [...Array(episodeNumber.current)].map((x, i) =>\n          <VideosContainer idx={i+1}/>\n        ) : [<></>]);\n        forceUpdate();\n      });\n  },[]);\n\n\n  document.querySelectorAll(\"video\").forEach(v=>(v.playbackRate=0.7));\n  return (\n    <div className=\"mx-auto mt-10\">\n      <div className=\"flex flex-col overflow-auto justify-items-center align-center h-4/5 px-6\">\n        {videos}\n      </div>\n    </div>\n  );\n};\n\nexport default History;\n","/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/VideosWrapper.tsx",["62","63","64","65","66"],"import axios from 'axios';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\n\nconst firstChoiceStyle = [\n  \"outline outline-offset-0 outline-green-500 shadow-2xl shadow-green-400\",\n  \"outline outline-offset-0 outline-red-500 opacity-75 shadow-2xl shadow-red-400\",\n  \"outline outline-offset-0 outline-green-300 shadow-xl shadow-green-300\",\n  \"outline outline-offset-0 outline-black-500 opacity-75\"\n];\n\nconst secondChoiceStyle = [\n  \"outline outline-offset-0 outline-red-500 opacity-75 shadow-2xl shadow-red-400\",\n  \"outline outline-offset-0 outline-green-500 shadow-2xl shadow-green-400\",\n  \"outline outline-offset-0 outline-green-300 shadow-xl shadow-green-300\",\n  \"outline outline-offset-0 outline-black-500 opacity-75\"\n];\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nconst VideosContainer: React.FC<{idx:number}> = ({ idx }) => {\n  const forceUpdate = useForceUpdate();\n  const [display, setDisplay] = useState<boolean>(false); \n  const [choice, setChoice] = useState<number>(0);\n  const videoOne = useRef<HTMLVideoElement>();\n  const videoTwo = useRef<HTMLVideoElement>();\n  useEffect(()=>{\n    axios.get(`http://127.0.0.1:8080/video_one_${idx}.mp4`)\n      .then(() => {\n        setDisplay(true);\n        forceUpdate();\n      })\n      .catch(()=>{\n        setDisplay(false);\n        forceUpdate();\n      });\n  },[]);\n  useEffect(()=>{\n    axios.get(`/human_choice/${idx}`)\n      .then((res) => {\n        setChoice(res.data.choice-1);\n        forceUpdate();\n      })\n      .catch(()=>{\n        setDisplay(false);\n        forceUpdate();\n      });\n  },[]);\n  \n  return (\n    <>\n      {display ?\n        <LazyLoadComponent threshold={20}>\n          <div className=\"flex flex-row my-4\">\n            <div className=\"flex flex-col\">\n              <div className=\"flex flex-row mx-auto pb-2\">\n                Episode {idx}\n              </div>\n              <div className=\"flex flex-row\">\n                <video className={`rounded-xl mx-4 ${firstChoiceStyle[choice]}`} autoPlay loop muted width=\"140\" height=\"140\" src={`http://127.0.0.1:8080/video_one_${idx}.mp4`}/>\n                <video className={`rounded-xl mx-4 ${secondChoiceStyle[choice]}`} autoPlay loop muted width=\"140\" height=\"140\" src={`http://127.0.0.1:8080/video_two_${idx}.mp4`}/>\n              </div>\n            </div>\n          </div>\n        </LazyLoadComponent>\n        :\n        <></>\n      }\n    </>\n  );\n};\n\nexport default VideosContainer;\n",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":18},{"ruleId":"71","severity":1,"message":"75","line":6,"column":10,"nodeType":"73","messageId":"74","endLine":6,"endColumn":15},{"ruleId":"76","severity":1,"message":"77","line":33,"column":17,"nodeType":"78","messageId":"79","endLine":41,"endColumn":12},{"ruleId":"71","severity":1,"message":"80","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"81","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"82","line":2,"column":50,"nodeType":"73","messageId":"74","endLine":2,"endColumn":58},{"ruleId":"71","severity":1,"message":"83","line":2,"column":60,"nodeType":"73","messageId":"74","endLine":2,"endColumn":70},{"ruleId":"71","severity":1,"message":"84","line":2,"column":72,"nodeType":"73","messageId":"74","endLine":2,"endColumn":83},{"ruleId":"71","severity":1,"message":"75","line":6,"column":10,"nodeType":"73","messageId":"74","endLine":6,"endColumn":15},{"ruleId":"71","severity":1,"message":"85","line":14,"column":7,"nodeType":"73","messageId":"74","endLine":14,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":26,"column":5,"nodeType":"88","endLine":26,"endColumn":7,"suggestions":"89"},{"ruleId":"71","severity":1,"message":"75","line":20,"column":10,"nodeType":"73","messageId":"74","endLine":20,"endColumn":15},{"ruleId":"71","severity":1,"message":"90","line":28,"column":9,"nodeType":"73","messageId":"74","endLine":28,"endColumn":17},{"ruleId":"71","severity":1,"message":"91","line":29,"column":9,"nodeType":"73","messageId":"74","endLine":29,"endColumn":17},{"ruleId":"86","severity":1,"message":"92","line":40,"column":5,"nodeType":"88","endLine":40,"endColumn":7,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"92","line":51,"column":5,"nodeType":"88","endLine":51,"endColumn":7,"suggestions":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"@typescript-eslint/no-unused-vars","'axiosRetry' is defined but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","'useEffect' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'videoList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'forceUpdate'. Either include it or remove the dependency array.","ArrayExpression",["97"],"'videoOne' is assigned a value but never used.","'videoTwo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'forceUpdate' and 'idx'. Either include them or remove the dependency array.",["98"],["99"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"102","fix":"104"},"Update the dependencies array to be: [forceUpdate]",{"range":"105","text":"106"},"Update the dependencies array to be: [forceUpdate, idx]",{"range":"107","text":"108"},{"range":"109","text":"108"},[881,883],"[forceUpdate]",[1519,1521],"[forceUpdate, idx]",[1756,1758]]