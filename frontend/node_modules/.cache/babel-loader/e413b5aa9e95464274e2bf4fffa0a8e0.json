{"ast":null,"code":"var _jsxFileName = \"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/VideosWrapper.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firstChoiceStyle = [\"outline outline-offset-0 outline-green-500 shadow-2xl shadow-green-400\", \"outline outline-offset-0 outline-red-500 opacity-75 shadow-2xl shadow-red-400\", \"outline outline-offset-0 outline-green-300 shadow-xl shadow-green-300\", \"outline outline-offset-0 outline-black-500 opacity-75\"];\nconst secondChoiceStyle = [\"outline outline-offset-0 outline-red-500 opacity-75 shadow-2xl shadow-red-400\", \"outline outline-offset-0 outline-green-500 shadow-2xl shadow-green-400\", \"outline outline-offset-0 outline-green-300 shadow-xl shadow-green-300\", \"outline outline-offset-0 outline-black-500 opacity-75\"];\n\nfunction useForceUpdate() {\n  _s();\n\n  const [value, setValue] = useState(0); // integer state\n\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\n_s(useForceUpdate, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\nconst VideosContainer = _ref => {\n  _s2();\n\n  let {\n    idx\n  } = _ref;\n  const forceUpdate = useForceUpdate();\n  const [display, setDisplay] = useState(false);\n  const [choice, setChoice] = useState(0);\n  useEffect(() => {\n    axios.get(`/videos/video_one_${idx}.mp4`).then(() => {\n      setDisplay(true);\n      forceUpdate();\n    }).catch(() => {\n      setDisplay(false);\n      forceUpdate();\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(`/human_choice/${idx}`).then(res => {\n      setChoice(res.data.choice - 1);\n    }).catch(() => {\n      setDisplay(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: display ? /*#__PURE__*/_jsxDEV(LazyLoadComponent, {\n      threshold: 20,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row my-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row mx-auto pb-2\",\n            children: [\"Episode \", idx]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              className: `rounded-xl mx-4 ${firstChoiceStyle[choice]}`,\n              autoPlay: true,\n              loop: true,\n              muted: true,\n              width: \"140\",\n              height: \"140\",\n              src: `videos/video_one_${idx}.mp4`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              className: `rounded-xl mx-4 ${secondChoiceStyle[choice]}`,\n              autoPlay: true,\n              loop: true,\n              muted: true,\n              width: \"140\",\n              height: \"140\",\n              src: `videos/video_two_${idx}.mp4`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n\n_s2(VideosContainer, \"mxB/sG/vdX1ah9LpWLz9s+U787o=\", false, function () {\n  return [useForceUpdate];\n});\n\n_c = VideosContainer;\nexport default VideosContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideosContainer\");","map":{"version":3,"sources":["/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/VideosWrapper.tsx"],"names":["axios","React","useEffect","useState","LazyLoadComponent","firstChoiceStyle","secondChoiceStyle","useForceUpdate","value","setValue","VideosContainer","idx","forceUpdate","display","setDisplay","choice","setChoice","get","then","catch","res","data"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\n\nconst firstChoiceStyle = [\n  \"outline outline-offset-0 outline-green-500 shadow-2xl shadow-green-400\",\n  \"outline outline-offset-0 outline-red-500 opacity-75 shadow-2xl shadow-red-400\",\n  \"outline outline-offset-0 outline-green-300 shadow-xl shadow-green-300\",\n  \"outline outline-offset-0 outline-black-500 opacity-75\"\n];\n\nconst secondChoiceStyle = [\n  \"outline outline-offset-0 outline-red-500 opacity-75 shadow-2xl shadow-red-400\",\n  \"outline outline-offset-0 outline-green-500 shadow-2xl shadow-green-400\",\n  \"outline outline-offset-0 outline-green-300 shadow-xl shadow-green-300\",\n  \"outline outline-offset-0 outline-black-500 opacity-75\"\n];\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nconst VideosContainer: React.FC<{idx:number}> = ({ idx }) => {\n  const forceUpdate = useForceUpdate();\n  const [display, setDisplay] = useState<boolean>(false); \n  const [choice, setChoice] = useState<number>(0);\n  useEffect(()=>{\n    axios.get(`/videos/video_one_${idx}.mp4`)\n      .then(() => {\n        setDisplay(true);\n        forceUpdate();\n      })\n      .catch(()=>{\n        setDisplay(false);\n        forceUpdate();\n      });\n  },[]);\n  useEffect(()=>{\n    axios.get(`/human_choice/${idx}`)\n      .then((res) => {\n        setChoice(res.data.choice-1);\n      })\n      .catch(()=>{\n        setDisplay(false);\n      });\n  },[]);\n  \n  return (\n    <>\n      {display ?\n        <LazyLoadComponent threshold={20}>\n          <div className=\"flex flex-row my-4\">\n            <div className=\"flex flex-col\">\n              <div className=\"flex flex-row mx-auto pb-2\">\n                Episode {idx}\n              </div>\n              <div className=\"flex flex-row\">\n                <video className={`rounded-xl mx-4 ${firstChoiceStyle[choice]}`} autoPlay loop muted width=\"140\" height=\"140\" src={`videos/video_one_${idx}.mp4`}/>\n                <video className={`rounded-xl mx-4 ${secondChoiceStyle[choice]}`} autoPlay loop muted width=\"140\" height=\"140\" src={`videos/video_two_${idx}.mp4`}/>\n              </div>\n            </div>\n          </div>\n        </LazyLoadComponent>\n        :\n        <></>\n      }\n    </>\n  );\n};\n\nexport default VideosContainer;\n"]},"metadata":{},"sourceType":"module"}