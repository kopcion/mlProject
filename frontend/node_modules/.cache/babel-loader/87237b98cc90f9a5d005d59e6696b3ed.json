{"ast":null,"code":"var _jsxFileName = \"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/VideosWrapper.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst choiceStyle = [\"outline outline-offset-0 outline-green-500\", \"outline outline-offset-0 outline-red-500\", \"outline outline-offset-0 outline-green-500\", \"outline outline-offset-0 outline-green-500\"];\n\nconst VideosWrapper = _ref => {\n  _s();\n\n  let {\n    idx\n  } = _ref;\n  const [display, setDisplay] = useState(false);\n  const [choice, setChoice] = useState(-1);\n  useEffect(() => {\n    axios.get(`/videos/video_one_${idx}.mp4`).then(() => {\n      setDisplay(true);\n    }).catch(() => {\n      setDisplay(false);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get(`/choice/${idx}`).then(res => {\n      setChoice(res.data.choice);\n    }).catch(() => {\n      setDisplay(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: display ? /*#__PURE__*/_jsxDEV(LazyLoadComponent, {\n      threshold: 20,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row my-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row mx-auto\",\n            children: [\"Episode \", idx]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              className: \"rounded-xl mx-4\",\n              autoPlay: true,\n              loop: true,\n              muted: true,\n              width: \"140\",\n              height: \"140\",\n              src: `videos/video_one_${idx}.mp4`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              className: \"rounded-xl mx-4\",\n              autoPlay: true,\n              loop: true,\n              muted: true,\n              width: \"140\",\n              height: \"140\",\n              src: `videos/video_two_${idx}.mp4`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n\n_s(VideosWrapper, \"Fcf1SKR6wDxjQP0sBo4bqQwnf+o=\");\n\n_c = VideosWrapper;\nexport default VideosWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideosWrapper\");","map":{"version":3,"sources":["/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/VideosWrapper.tsx"],"names":["axios","React","useEffect","useState","LazyLoadComponent","choiceStyle","VideosWrapper","idx","display","setDisplay","choice","setChoice","get","then","catch","res","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAAmD,OAAnD;AACA,SAASC,iBAAT,QAAkC,iCAAlC;;;AAEA,MAAMC,WAAW,GAAG,CAClB,4CADkB,EAElB,0CAFkB,EAGlB,4CAHkB,EAIlB,4CAJkB,CAApB;;AAMA,MAAMC,aAAqC,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AACzD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAS,CAAC,CAAV,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACZF,IAAAA,KAAK,CAACY,GAAN,CAAW,qBAAoBL,GAAI,MAAnC,EACGM,IADH,CACQ,MAAM;AACVJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAHH,EAIGK,KAJH,CAIS,MAAI;AACTL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KANH;AAOD,GARQ,EAQP,EARO,CAAT;AASAP,EAAAA,SAAS,CAAC,MAAI;AACZF,IAAAA,KAAK,CAACY,GAAN,CAAW,WAAUL,GAAI,EAAzB,EACGM,IADH,CACSE,GAAD,IAAS;AACbJ,MAAAA,SAAS,CAACI,GAAG,CAACC,IAAJ,CAASN,MAAV,CAAT;AACD,KAHH,EAIGI,KAJH,CAIS,MAAI;AACTL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KANH;AAOD,GARQ,EAQP,EARO,CAAT;AAUA,sBACE;AAAA,cACGD,OAAO,gBACN,QAAC,iBAAD;AAAmB,MAAA,SAAS,EAAE,EAA9B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA,mCACWD,GADX;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACE;AAAO,cAAA,SAAS,EAAC,iBAAjB;AAAmC,cAAA,QAAQ,MAA3C;AAA4C,cAAA,IAAI,MAAhD;AAAiD,cAAA,KAAK,MAAtD;AAAuD,cAAA,KAAK,EAAC,KAA7D;AAAmE,cAAA,MAAM,EAAC,KAA1E;AAAgF,cAAA,GAAG,EAAG,oBAAmBA,GAAI;AAA7G;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,cAAA,SAAS,EAAC,iBAAjB;AAAmC,cAAA,QAAQ,MAA3C;AAA4C,cAAA,IAAI,MAAhD;AAAiD,cAAA,KAAK,MAAtD;AAAuD,cAAA,KAAK,EAAC,KAA7D;AAAmE,cAAA,MAAM,EAAC,KAA1E;AAAgF,cAAA,GAAG,EAAG,oBAAmBA,GAAI;AAA7G;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADM,gBAeN;AAhBJ,mBADF;AAqBD,CA3CD;;GAAMD,a;;KAAAA,a;AA6CN,eAAeA,aAAf","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { LazyLoadComponent } from 'react-lazy-load-image-component';\n\nconst choiceStyle = [\n  \"outline outline-offset-0 outline-green-500\",\n  \"outline outline-offset-0 outline-red-500\",\n  \"outline outline-offset-0 outline-green-500\",\n  \"outline outline-offset-0 outline-green-500\"\n];\nconst VideosWrapper: React.FC<{idx:number}> = ({ idx }) => {\n  const [display, setDisplay] = useState<boolean>(false); \n  const [choice, setChoice] = useState<number>(-1);\n  useEffect(()=>{\n    axios.get(`/videos/video_one_${idx}.mp4`)\n      .then(() => {\n        setDisplay(true);\n      })\n      .catch(()=>{\n        setDisplay(false);\n      });\n  },[]);\n  useEffect(()=>{\n    axios.get(`/choice/${idx}`)\n      .then((res) => {\n        setChoice(res.data.choice);\n      })\n      .catch(()=>{\n        setDisplay(false);\n      });\n  },[]);\n  \n  return (\n    <>\n      {display ?\n        <LazyLoadComponent threshold={20}>\n          <div className=\"flex flex-row my-4\">\n            <div className=\"flex flex-col\">\n              <div className=\"flex flex-row mx-auto\">\n                Episode {idx}\n              </div>\n              <div className=\"flex flex-row\">\n                <video className=\"rounded-xl mx-4\" autoPlay loop muted width=\"140\" height=\"140\" src={`videos/video_one_${idx}.mp4`}/>\n                <video className=\"rounded-xl mx-4\" autoPlay loop muted width=\"140\" height=\"140\" src={`videos/video_two_${idx}.mp4`}/>\n              </div>\n            </div>\n          </div>\n        </LazyLoadComponent>\n        :\n        <></>\n      }\n    </>\n  );\n};\n\nexport default VideosWrapper;\n"]},"metadata":{},"sourceType":"module"}