{"ast":null,"code":"var _jsxFileName = \"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoice.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction useForceUpdate() {\n  _s();\n\n  const [value, setValue] = useState(0); // integer state\n\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\n_s(useForceUpdate, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\nconst SampleChoice = () => {\n  _s2();\n\n  const forceUpdate = useForceUpdate();\n  const nextEpisodeAvailable = useRef(false);\n  const episodeNumber = useRef(0);\n  const prevEpisodeNumber = useRef(0);\n\n  const submitChoice = choice => {\n    axios.post(`/human_choice/${choice}/episode/${episodeNumber.current}`).then(() => {\n      nextEpisodeAvailable.current = false;\n      forceUpdate();\n    });\n  };\n\n  useEffect(() => {\n    axiosRetry(axios, {\n      retries: 20\n    });\n    axiosRetry(axios, {\n      retryDelay: retryCount => {\n        return retryCount * 1000;\n      },\n      retries: 20,\n      retryCondition: res => {\n        console.log(res);\n        return true;\n      }\n    });\n  }, []);\n\n  const checkNewEpisode = () => {\n    axios.get('/episode_number').then(res => {\n      if (episodeNumber.current < res.data.episode_number) {\n        console.log(res.data);\n        prevEpisodeNumber.current = episodeNumber.current;\n        episodeNumber.current = res.data.episode_number;\n        nextEpisodeAvailable.current = !res.data.voted;\n        forceUpdate();\n      }\n    }).catch(() => {\n      console.log('not yet');\n    });\n  };\n\n  const buttonStyle = \"bg-indigo-500 hover:bg-blue-500 p-2 active:bg-cyan-500 rounded-xl\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: nextEpisodeAvailable.current ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col mx-auto mt-28\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row mx-auto mb-10\",\n          children: [\"Episode \", episodeNumber.current]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mx-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              onLoad: () => document.querySelectorAll(\"video\").forEach(v => v.playbackRate = 0.7),\n              className: \"rounded-xl\",\n              autoPlay: true,\n              loop: true,\n              muted: true,\n              width: \"320\",\n              height: \"320\",\n              src: `http://127.0.0.1:8080/video_one_${episodeNumber.current}.mp4`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${buttonStyle} mt-2`,\n              onClick: () => submitChoice(1),\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${buttonStyle} mt-2`,\n              onClick: () => submitChoice(3),\n              children: \"Equally good\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mx-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              onLoad: () => document.querySelectorAll(\"video\").forEach(v => v.playbackRate = 0.7),\n              className: \"rounded-xl\",\n              autoPlay: true,\n              loop: true,\n              muted: true,\n              width: \"320\",\n              height: \"320\",\n              src: `http://127.0.0.1:8080/video_two_${episodeNumber.current}.mp4`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${buttonStyle} mt-2`,\n              onClick: () => submitChoice(2),\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${buttonStyle} mt-2`,\n              onClick: () => submitChoice(4),\n              children: \"Discard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-items-center w-screen h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkNewEpisode,\n        className: `${buttonStyle} m-auto`,\n        children: \"Go to the next episode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s2(SampleChoice, \"yEXNS3tnfmcyiCCAaI94m+2mLkw=\", false, function () {\n  return [useForceUpdate];\n});\n\n_c = SampleChoice;\nexport default SampleChoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"SampleChoice\");","map":{"version":3,"sources":["/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoice.tsx"],"names":["React","useEffect","useState","useRef","axios","axiosRetry","useForceUpdate","value","setValue","SampleChoice","forceUpdate","nextEpisodeAvailable","episodeNumber","prevEpisodeNumber","submitChoice","choice","post","current","then","retries","retryDelay","retryCount","retryCondition","res","console","log","checkNewEpisode","get","data","episode_number","voted","catch","buttonStyle","document","querySelectorAll","forEach","v","playbackRate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nconst SampleChoice: React.FC = () => {\n  const forceUpdate = useForceUpdate();\n  const nextEpisodeAvailable = useRef<boolean>(false);\n  const episodeNumber = useRef<number>(0);\n  const prevEpisodeNumber = useRef<number>(0);\n  const submitChoice = (choice: number) => {\n    axios.post(`/human_choice/${choice}/episode/${episodeNumber.current}`)\n      .then(() => {\n        nextEpisodeAvailable.current = false;\n        forceUpdate();\n      });\n  };\n\n  useEffect(()=>{\n    axiosRetry(axios, { retries: 20 });\n    axiosRetry(axios, { \n        retryDelay: (retryCount) => {\n          return retryCount * 1000;\n        },\n        retries: 20,\n        retryCondition: (res) => {\n          console.log(res);\n          return true;\n        }\n      }\n    );\n  },[]);\n\n  const checkNewEpisode = () => {\n    axios.get('/episode_number')\n      .then((res) => {\n        if(episodeNumber.current < res.data.episode_number){\n          console.log(res.data);\n          prevEpisodeNumber.current = episodeNumber.current;\n          episodeNumber.current = res.data.episode_number;\n          nextEpisodeAvailable.current = !res.data.voted;\n          forceUpdate();\n        }\n      })\n      .catch(() => {\n        console.log('not yet');\n      });\n  };\n  const buttonStyle = \"bg-indigo-500 hover:bg-blue-500 p-2 active:bg-cyan-500 rounded-xl\";\n  return (\n    <>\n      {nextEpisodeAvailable.current ? \n        <>\n          <div className=\"flex flex-col mx-auto mt-28\">\n            <div className=\"flex flex-row mx-auto mb-10\">\n                Episode {episodeNumber.current}\n            </div>\n            <div className=\"flex flex-row\">\n              <div className=\"flex flex-col mx-4\">\n                <video onLoad={()=>(document.querySelectorAll(\"video\").forEach(v=>(v.playbackRate=0.7)))} className=\"rounded-xl\" autoPlay loop muted width=\"320\" height=\"320\" src={`http://127.0.0.1:8080/video_one_${episodeNumber.current}.mp4`}/>\n                <button className={`${buttonStyle} mt-2`} onClick={()=>(submitChoice(1))}>1</button>\n                <button className={`${buttonStyle} mt-2`} onClick={()=>(submitChoice(3))}>Equally good</button>\n              </div>\n              <div className=\"flex flex-col mx-4\">\n                <video onLoad={()=>(document.querySelectorAll(\"video\").forEach(v=>(v.playbackRate=0.7)))} className=\"rounded-xl\" autoPlay loop muted width=\"320\" height=\"320\" src={`http://127.0.0.1:8080/video_two_${episodeNumber.current}.mp4`}/>\n                <button className={`${buttonStyle} mt-2`} onClick={()=>(submitChoice(2))}>2</button>\n                <button className={`${buttonStyle} mt-2`} onClick={()=>(submitChoice(4))}>Discard</button>\n              </div>\n            </div>\n          </div>\n        </>\n      :\n        <div className=\"flex justify-items-center w-screen h-screen\">\n          <button onClick={checkNewEpisode} className={`${buttonStyle} m-auto`}>\n            Go to the next episode\n          </button>\n        </div>\n      }\n    </>\n  );\n};\n\nexport default SampleChoice;\n"]},"metadata":{},"sourceType":"module"}