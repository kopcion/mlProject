{"ast":null,"code":"var _jsxFileName = \"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoice.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction useForceUpdate() {\n  _s();\n\n  const [value, setValue] = useState(0); // integer state\n\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\n_s(useForceUpdate, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\nconst SampleChoice = () => {\n  _s2();\n\n  const forceUpdate = useForceUpdate(); // const [episodeNumber, setEpisodeNumber] = useState<number>(1);\n\n  const nextEpisodeAvailable = useRef(false);\n  const episodeNumber = useRef(1);\n\n  const submitChoice = choice => {\n    axios.post(`/human_choice/${choice}`).then(res => {\n      nextEpisodeAvailable.current = false; // setEpisodeNumber(res.data.displayed_episode);\n\n      episodeNumber.current = forceUpdate();\n    });\n  };\n\n  const checkNewEpisode = () => {\n    axios.get(`/videos/video_two_${episodeNumber}.mp4`).then(() => {\n      nextEpisodeAvailable.current = true;\n      forceUpdate();\n    }).catch(() => {\n      console.log('not yet');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: nextEpisodeAvailable.current ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row mx-auto mt-40\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          autoPlay: true,\n          loop: true,\n          muted: true,\n          width: \"320\",\n          height: \"320\",\n          src: `videos/video_one_${episodeNumber}.mp4`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\",\n          onClick: () => submitChoice(1),\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\",\n          onClick: () => submitChoice(3),\n          children: \"Equally good\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          autoPlay: true,\n          loop: true,\n          muted: true,\n          width: \"320\",\n          height: \"320\",\n          src: `videos/video_two_${episodeNumber}.mp4`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\",\n          onClick: () => submitChoice(2),\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\",\n          onClick: () => submitChoice(4),\n          children: \"Discard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-items-center w-screen h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkNewEpisode,\n        className: \"mx-auto my-auto bg-amber-400 hover:bg-amber-500 active:bg-amber-600\",\n        children: \"Go to the next episode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s2(SampleChoice, \"hsyORUxtcf9hzghS2YfGSYRgLjs=\", false, function () {\n  return [useForceUpdate];\n});\n\n_c = SampleChoice;\nexport default SampleChoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"SampleChoice\");","map":{"version":3,"sources":["/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoice.tsx"],"names":["React","useState","useRef","axios","useForceUpdate","value","setValue","SampleChoice","forceUpdate","nextEpisodeAvailable","episodeNumber","submitChoice","choice","post","then","res","current","checkNewEpisode","get","catch","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nconst SampleChoice: React.FC = () => {\n  const forceUpdate = useForceUpdate();\n  // const [episodeNumber, setEpisodeNumber] = useState<number>(1);\n  const nextEpisodeAvailable = useRef<boolean>(false);\n  const episodeNumber = useRef<number>(1);\n  const submitChoice = (choice: number) => {\n    axios.post(`/human_choice/${choice}`)\n      .then(res => {\n        nextEpisodeAvailable.current = false;\n        // setEpisodeNumber(res.data.displayed_episode);\n        episodeNumber.current = \n        forceUpdate();\n      });\n  };\n\n  const checkNewEpisode = () => {\n    axios.get(`/videos/video_two_${episodeNumber}.mp4`)\n      .then(() => {\n        nextEpisodeAvailable.current = true;\n        forceUpdate();\n      })\n      .catch(() => {\n        console.log('not yet');\n      });\n  };\n  return (\n    <>\n      {nextEpisodeAvailable.current ? \n        <div className=\"flex flex-row mx-auto mt-40\">\n          <div className=\"flex flex-col mx-4\">\n            <video autoPlay loop muted width=\"320\" height=\"320\" src={`videos/video_one_${episodeNumber}.mp4`}/>\n            <button className=\"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\" onClick={()=>(submitChoice(1))}>1</button>\n            <button className=\"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\" onClick={()=>(submitChoice(3))}>Equally good</button>\n          </div>\n          <div className=\"flex flex-col mx-4\">\n            <video autoPlay loop muted width=\"320\" height=\"320\" src={`videos/video_two_${episodeNumber}.mp4`}/>\n            <button className=\"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\" onClick={()=>(submitChoice(2))}>2</button>\n            <button className=\"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\" onClick={()=>(submitChoice(4))}>Discard</button>\n          </div>\n        </div>\n      :\n        <div className=\"flex justify-items-center w-screen h-screen\">\n          <button onClick={checkNewEpisode} className=\"mx-auto my-auto bg-amber-400 hover:bg-amber-500 active:bg-amber-600\">\n            Go to the next episode\n          </button>\n        </div>\n      }\n    </>\n  );\n}\n\nexport default SampleChoice;\n"]},"metadata":{},"sourceType":"module"}