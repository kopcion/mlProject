{"ast":null,"code":"var _jsxFileName = \"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoice.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SampleChoice = () => {\n  _s();\n\n  const [episodeNumber, setEpisodeNumber] = useState(1);\n  const [nextEpisodeAvailable, setNextEpisodeAvailable] = useState(false);\n\n  const submitChoice = choice => {\n    // axios.get(`/episode_number`)\n    //   .then(res => {\n    //     const episode_number = res.data.episode_number;\n    //     console.log(res.data, episode_number)\n    //     setEpisodeNumber(episode_number);\n    //   });\n    axios.post(`/human_choice/${choice}`).then(res => {\n      setEpisodeNumber(res.data.displayed_episode);\n    });\n  };\n\n  useEffect(() => {\n    setNextEpisodeAvailable(false);\n  }, [episodeNumber]);\n\n  const getNextEpisode = () => {\n    axios.get(`/episode_number`).then(res => {\n      const episode_number = res.data.episode_number;\n      console.log(res.data, episode_number);\n      setEpisodeNumber(episode_number);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n\n  const checkNewEpisode = () => {\n    axios.get(`/videos/video_two_${episodeNumber}.mp4`).then(() => {\n      setNextEpisodeAvailable(true);\n    }).catch(() => {\n      console.log('not yet');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: nextEpisodeAvailable ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row mx-auto mt-40\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          autoPlay: true,\n          loop: true,\n          muted: true,\n          width: \"320\",\n          height: \"320\",\n          src: `videos/video_one_${episodeNumber}.mp4`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\",\n          onClick: () => submitChoice(1),\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\",\n          onClick: () => submitChoice(3),\n          children: \"Equally good\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col mx-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          autoPlay: true,\n          loop: true,\n          muted: true,\n          width: \"320\",\n          height: \"320\",\n          src: `videos/video_two_${episodeNumber}.mp4`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\",\n          onClick: () => submitChoice(2),\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\",\n          onClick: () => submitChoice(4),\n          children: \"Discard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-center w-screen h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkNewEpisode,\n        children: \"Go to the next episode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(SampleChoice, \"m33vFqO93XfLklwNk34BuFbbIDM=\");\n\n_c = SampleChoice;\nexport default SampleChoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"SampleChoice\");","map":{"version":3,"sources":["/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoice.tsx"],"names":["React","useEffect","useState","axios","SampleChoice","episodeNumber","setEpisodeNumber","nextEpisodeAvailable","setNextEpisodeAvailable","submitChoice","choice","post","then","res","data","displayed_episode","getNextEpisode","get","episode_number","console","log","catch","error","checkNewEpisode"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst SampleChoice: React.FC = () => {\n  const [episodeNumber, setEpisodeNumber] = useState<number>(1);\n  const [nextEpisodeAvailable, setNextEpisodeAvailable] = useState<boolean>(false);\n  const submitChoice = (choice: number) => {\n    // axios.get(`/episode_number`)\n    //   .then(res => {\n    //     const episode_number = res.data.episode_number;\n    //     console.log(res.data, episode_number)\n    //     setEpisodeNumber(episode_number);\n    //   });\n    axios.post(`/human_choice/${choice}`)\n      .then(res => {\n        setEpisodeNumber(res.data.displayed_episode);\n      });\n  };\n  useEffect(()=>{setNextEpisodeAvailable(false)},[episodeNumber]);\n  const getNextEpisode = () => {\n    axios.get(`/episode_number`)\n      .then(res => {\n        const episode_number = res.data.episode_number;\n        console.log(res.data, episode_number)\n        setEpisodeNumber(episode_number);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n  };\n\n  const checkNewEpisode = () => {\n    axios.get(`/videos/video_two_${episodeNumber}.mp4`)\n      .then(() => {\n        setNextEpisodeAvailable(true);\n      })\n      .catch(() => {\n        console.log('not yet');\n      });\n  };\n\n  \n  return (\n    <>\n      {nextEpisodeAvailable ? \n        <div className=\"flex flex-row mx-auto mt-40\">\n          <div className=\"flex flex-col mx-4\">\n            <video autoPlay loop muted width=\"320\" height=\"320\" src={`videos/video_one_${episodeNumber}.mp4`}/>\n            <button className=\"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\" onClick={()=>(submitChoice(1))}>1</button>\n            <button className=\"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\" onClick={()=>(submitChoice(3))}>Equally good</button>\n          </div>\n          <div className=\"flex flex-col mx-4\">\n            <video autoPlay loop muted width=\"320\" height=\"320\" src={`videos/video_two_${episodeNumber}.mp4`}/>\n            <button className=\"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\" onClick={()=>(submitChoice(2))}>2</button>\n            <button className=\"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\" onClick={()=>(submitChoice(4))}>Discard</button>\n          </div>\n          {/* <button className=\"bg-amber-400 hover:bg-amber-500 active:bg-amber-600\" onClick={()=>(getNextEpisode())}>Get next episode</button> */}\n        </div>\n      :\n        <div className=\"items-center w-screen h-screen\">\n          <button onClick={checkNewEpisode}>Go to the next episode</button>\n        </div>\n      }\n    </>\n  );\n}\n\nexport default SampleChoice;\n"]},"metadata":{},"sourceType":"module"}