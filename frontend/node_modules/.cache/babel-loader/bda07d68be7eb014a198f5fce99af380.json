{"ast":null,"code":"var _jsxFileName = \"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoice.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction useForceUpdate() {\n  _s();\n\n  const [value, setValue] = useState(0); // integer state\n\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\n_s(useForceUpdate, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\nconst SampleChoice = () => {\n  _s2();\n\n  const forceUpdate = useForceUpdate(); // const [episodeNumber, setEpisodeNumber] = useState<number>(1);\n\n  const nextEpisodeAvailable = useRef(false);\n  const episodeNumber = useRef(1);\n\n  const submitChoice = choice => {\n    axios.post(`/human_choice/${choice}`).then(res => {\n      nextEpisodeAvailable.current = false; // setEpisodeNumber(res.data.displayed_episode);\n\n      episodeNumber.current = res.data.displayed_episode;\n      forceUpdate();\n    });\n  };\n\n  const checkNewEpisode = () => {\n    axios.get(`/videos/video_two_${episodeNumber.current}.mp4`).then(() => {\n      nextEpisodeAvailable.current = true;\n      forceUpdate();\n    }).catch(() => {\n      console.log('not yet');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: nextEpisodeAvailable.current ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col mx-auto mt-28\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row mx-auto mb-10\",\n          children: [\"Episode \", episodeNumber.current]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mx-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              autoPlay: true,\n              loop: true,\n              muted: true,\n              width: \"320\",\n              height: \"320\",\n              src: `videos/video_one_${episodeNumber.current}.mp4`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-amber-400 hover:bg-amber-500 active:bg-amber-600 mt-4 rounded-xl\",\n              onClick: () => submitChoice(1),\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-amber-400 hover:bg-amber-500 active:bg-amber-600 mt-4 rounded-xl\",\n              onClick: () => submitChoice(3),\n              children: \"Equally good\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mx-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              autoPlay: true,\n              loop: true,\n              muted: true,\n              width: \"320\",\n              height: \"320\",\n              src: `videos/video_two_${episodeNumber.current}.mp4`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-amber-400 hover:bg-amber-500 active:bg-amber-600 mt-4 rounded-xl\",\n              onClick: () => submitChoice(2),\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-amber-400 hover:bg-amber-500 active:bg-amber-600 mt-4 rounded-xl\",\n              onClick: () => submitChoice(4),\n              children: \"Discard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-items-center w-screen h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkNewEpisode,\n        className: \"mx-auto my-auto bg-amber-400 hover:bg-amber-500 active:bg-amber-600\",\n        children: \"Go to the next episode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s2(SampleChoice, \"hsyORUxtcf9hzghS2YfGSYRgLjs=\", false, function () {\n  return [useForceUpdate];\n});\n\n_c = SampleChoice;\nexport default SampleChoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"SampleChoice\");","map":{"version":3,"sources":["/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoice.tsx"],"names":["React","useState","useRef","axios","useForceUpdate","value","setValue","SampleChoice","forceUpdate","nextEpisodeAvailable","episodeNumber","submitChoice","choice","post","then","res","current","data","displayed_episode","checkNewEpisode","get","catch","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nconst SampleChoice: React.FC = () => {\n  const forceUpdate = useForceUpdate();\n  // const [episodeNumber, setEpisodeNumber] = useState<number>(1);\n  const nextEpisodeAvailable = useRef<boolean>(false);\n  const episodeNumber = useRef<number>(1);\n  const submitChoice = (choice: number) => {\n    axios.post(`/human_choice/${choice}`)\n      .then(res => {\n        nextEpisodeAvailable.current = false;\n        // setEpisodeNumber(res.data.displayed_episode);\n        episodeNumber.current = res.data.displayed_episode;\n        forceUpdate();\n      });\n  };\n\n  const checkNewEpisode = () => {\n    axios.get(`/videos/video_two_${episodeNumber.current}.mp4`)\n      .then(() => {\n        nextEpisodeAvailable.current = true;\n        forceUpdate();\n      })\n      .catch(() => {\n        console.log('not yet');\n      });\n  };\n  return (\n    <>\n      {nextEpisodeAvailable.current ?\n        <>\n          <div className=\"flex flex-col mx-auto mt-28\">\n            <div className=\"flex flex-row mx-auto mb-10\">\n                Episode {episodeNumber.current}\n            </div>\n            <div className=\"flex flex-row\">\n              <div className=\"flex flex-col mx-4\">\n                <video autoPlay loop muted width=\"320\" height=\"320\" src={`videos/video_one_${episodeNumber.current}.mp4`}/>\n                <button className=\"bg-amber-400 hover:bg-amber-500 active:bg-amber-600 mt-4 rounded-xl\" onClick={()=>(submitChoice(1))}>1</button>\n                <button className=\"bg-amber-400 hover:bg-amber-500 active:bg-amber-600 mt-4 rounded-xl\" onClick={()=>(submitChoice(3))}>Equally good</button>\n              </div>\n              <div className=\"flex flex-col mx-4\">\n                <video autoPlay loop muted width=\"320\" height=\"320\" src={`videos/video_two_${episodeNumber.current}.mp4`}/>\n                <button className=\"bg-amber-400 hover:bg-amber-500 active:bg-amber-600 mt-4 rounded-xl\" onClick={()=>(submitChoice(2))}>2</button>\n                <button className=\"bg-amber-400 hover:bg-amber-500 active:bg-amber-600 mt-4 rounded-xl\" onClick={()=>(submitChoice(4))}>Discard</button>\n              </div>\n            </div>\n          </div>\n        </>\n      :\n        <div className=\"flex justify-items-center w-screen h-screen\">\n          <button onClick={checkNewEpisode} className=\"mx-auto my-auto bg-amber-400 hover:bg-amber-500 active:bg-amber-600\">\n            Go to the next episode\n          </button>\n        </div>\n      }\n    </>\n  );\n}\n\nexport default SampleChoice;\n"]},"metadata":{},"sourceType":"module"}