{"ast":null,"code":"var _jsxFileName = \"/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoice.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction useForceUpdate() {\n  _s();\n\n  const [value, setValue] = useState(0); // integer state\n\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\n_s(useForceUpdate, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\nconst sleep = milliseconds => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n};\n\nconst SampleChoice = () => {\n  _s2();\n\n  const forceUpdate = useForceUpdate();\n  const nextEpisodeAvailable = useRef(false);\n  const [loading, setLoading] = useState(false);\n  const episodeNumber = useRef(0);\n\n  const submitChoice = choice => {\n    axios.post(`/human_choice/${choice}/episode/${episodeNumber.current}`).then(() => {\n      nextEpisodeAvailable.current = false;\n      forceUpdate();\n    });\n  };\n\n  useEffect(() => {}, []);\n\n  const checkNewEpisode = () => {\n    new Promise(async () => {\n      for (var i = 0; i < 100; i++) {\n        console.log(i);\n        await axios.get('/episode_number').then(res => {\n          if (episodeNumber.current < res.data.episode_number) {\n            console.log(res.data);\n            episodeNumber.current = res.data.episode_number;\n            nextEpisodeAvailable.current = !res.data.voted;\n            i = 100;\n            setLoading(false); // forceUpdate();\n          }\n        }).catch(() => {\n          console.log('not yet');\n        });\n        await sleep(1000);\n      }\n    });\n    console.log('refreshing');\n    setLoading(true); // forceUpdate();\n    // axios.get('/episode_number')\n    //   .then((res) => {\n    //     if(episodeNumber.current < res.data.episode_number){\n    //       console.log(res.data);\n    //       episodeNumber.current = res.data.episode_number;\n    //       nextEpisodeAvailable.current = !res.data.voted;\n    //       forceUpdate();\n    //     }\n    //   })\n    //   .catch(() => {\n    //     console.log('not yet');\n    //   });\n  };\n\n  const buttonStyle = \"bg-indigo-500 hover:bg-blue-500 p-2 active:bg-cyan-500 rounded-xl\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: nextEpisodeAvailable.current ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col mx-auto mt-28\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row mx-auto mb-10\",\n          children: [\"Episode \", episodeNumber.current]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mx-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              onLoad: () => document.querySelectorAll(\"video\").forEach(v => v.playbackRate = 0.7),\n              className: \"rounded-xl\",\n              autoPlay: true,\n              loop: true,\n              muted: true,\n              width: \"320\",\n              height: \"320\",\n              src: `http://127.0.0.1:8080/video_one_${episodeNumber.current}.mp4`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${buttonStyle} mt-2`,\n              onClick: () => submitChoice(1),\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${buttonStyle} mt-2`,\n              onClick: () => submitChoice(3),\n              children: \"Equally good\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col mx-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"video\", {\n              onLoad: () => document.querySelectorAll(\"video\").forEach(v => v.playbackRate = 0.7),\n              className: \"rounded-xl\",\n              autoPlay: true,\n              loop: true,\n              muted: true,\n              width: \"320\",\n              height: \"320\",\n              src: `http://127.0.0.1:8080/video_two_${episodeNumber.current}.mp4`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${buttonStyle} mt-2`,\n              onClick: () => submitChoice(2),\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${buttonStyle} mt-2`,\n              onClick: () => submitChoice(4),\n              children: \"Discard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-items-center w-screen h-screen\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${buttonStyle} m-auto flex flex-row bg-blue-500`,\n        disabled: true,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"animate-spin h-10 w-10 mr-3\",\n          viewBox: \"0 0 24 24\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            className: \"opacity-25\",\n            cx: \"12\",\n            cy: \"12\",\n            r: \"10\",\n            stroke: \"currentColor\",\n            \"stroke-width\": \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            className: \"opacity-75\",\n            fill: \"currentColor\",\n            d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"my-auto\",\n          children: \"Next episode is being rendered...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkNewEpisode,\n        className: `${buttonStyle} m-auto`,\n        children: \"Go to the next episode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s2(SampleChoice, \"DAGHqeJYB3sWEdhw0avTNmzpl2Q=\", false, function () {\n  return [useForceUpdate];\n});\n\n_c = SampleChoice;\nexport default SampleChoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"SampleChoice\");","map":{"version":3,"sources":["/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/SampleChoice.tsx"],"names":["React","useEffect","useState","useRef","axios","useForceUpdate","value","setValue","sleep","milliseconds","Promise","resolve","setTimeout","SampleChoice","forceUpdate","nextEpisodeAvailable","loading","setLoading","episodeNumber","submitChoice","choice","post","current","then","checkNewEpisode","i","console","log","get","res","data","episode_number","voted","catch","buttonStyle","document","querySelectorAll","forEach","v","playbackRate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\nconst sleep = (milliseconds:number) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nconst SampleChoice: React.FC = () => {\n  const forceUpdate = useForceUpdate();\n  const nextEpisodeAvailable = useRef<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const episodeNumber = useRef<number>(0);\n  const submitChoice = (choice: number) => {\n    axios.post(`/human_choice/${choice}/episode/${episodeNumber.current}`)\n      .then(() => {\n        nextEpisodeAvailable.current = false;\n        forceUpdate();\n      });\n  };\n\n  useEffect(()=>{},[]);\n\n  const checkNewEpisode = () => {\n    new Promise(async ()=>{for (var i = 0; i < 100; i++) {\n        console.log(i);\n        await axios.get('/episode_number')\n          .then((res) => {\n            if(episodeNumber.current < res.data.episode_number){\n              console.log(res.data);\n              episodeNumber.current = res.data.episode_number;\n              nextEpisodeAvailable.current = !res.data.voted;\n              i=100;\n              setLoading(false);\n              // forceUpdate();\n            }\n          })\n          .catch(() => {\n            console.log('not yet');\n          });\n        await sleep(1000);\n    }});\n    console.log('refreshing');\n    setLoading(true);\n    // forceUpdate();\n\n    // axios.get('/episode_number')\n    //   .then((res) => {\n    //     if(episodeNumber.current < res.data.episode_number){\n    //       console.log(res.data);\n    //       episodeNumber.current = res.data.episode_number;\n    //       nextEpisodeAvailable.current = !res.data.voted;\n    //       forceUpdate();\n    //     }\n    //   })\n    //   .catch(() => {\n    //     console.log('not yet');\n    //   });\n  };\n  const buttonStyle = \"bg-indigo-500 hover:bg-blue-500 p-2 active:bg-cyan-500 rounded-xl\";\n  return (\n    <>\n      {nextEpisodeAvailable.current ? \n        <>\n          <div className=\"flex flex-col mx-auto mt-28\">\n            <div className=\"flex flex-row mx-auto mb-10\">\n                Episode {episodeNumber.current}\n            </div>\n            <div className=\"flex flex-row\">\n              <div className=\"flex flex-col mx-4\">\n                <video onLoad={()=>(document.querySelectorAll(\"video\").forEach(v=>(v.playbackRate=0.7)))} className=\"rounded-xl\" autoPlay loop muted width=\"320\" height=\"320\" src={`http://127.0.0.1:8080/video_one_${episodeNumber.current}.mp4`}/>\n                <button className={`${buttonStyle} mt-2`} onClick={()=>(submitChoice(1))}>1</button>\n                <button className={`${buttonStyle} mt-2`} onClick={()=>(submitChoice(3))}>Equally good</button>\n              </div>\n              <div className=\"flex flex-col mx-4\">\n                <video onLoad={()=>(document.querySelectorAll(\"video\").forEach(v=>(v.playbackRate=0.7)))} className=\"rounded-xl\" autoPlay loop muted width=\"320\" height=\"320\" src={`http://127.0.0.1:8080/video_two_${episodeNumber.current}.mp4`}/>\n                <button className={`${buttonStyle} mt-2`} onClick={()=>(submitChoice(2))}>2</button>\n                <button className={`${buttonStyle} mt-2`} onClick={()=>(submitChoice(4))}>Discard</button>\n              </div>\n            </div>\n          </div>\n        </>\n      :\n        <div className=\"flex justify-items-center w-screen h-screen\">\n          {loading ? \n          <button type=\"button\" className={`${buttonStyle} m-auto flex flex-row bg-blue-500`} disabled>\n            <svg className=\"animate-spin h-10 w-10 mr-3\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n              <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n              <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n            </svg>\n            <p className=\"my-auto\">Next episode is being rendered...</p>\n          </button>\n          : \n          <button onClick={checkNewEpisode} className={`${buttonStyle} m-auto`}>\n            Go to the next episode\n          </button>\n          }\n          </div>\n        }\n    </>\n  );\n};\n\nexport default SampleChoice;\n"]},"metadata":{},"sourceType":"module"}