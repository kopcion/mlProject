{"ast":null,"code":"import _toConsumableArray from\"/Users/kopcion/LearningFromHumanPreferences-master/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/kopcion/LearningFromHumanPreferences-master/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import axios from'axios';import React,{useEffect,useState,useRef}from'react';import VideosContainer from\"./VideosWrapper\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function useForceUpdate(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];// integer state\nreturn function(){return setValue(function(value){return value+1;});};// update the state to force render\n}var History=function History(){var episodeNumber=useRef(0);var forceUpdate=useForceUpdate();var _useState3=useState([/*#__PURE__*/_jsx(_Fragment,{})]),_useState4=_slicedToArray(_useState3,2),videos=_useState4[0],setVideos=_useState4[1];var videoList=[/*#__PURE__*/_jsx(_Fragment,{})];useEffect(function(){console.log('mount');axios.get(\"/episode_number\").then(function(res){console.log(res.data);// setEpisodeNumber(res.data.episode_number);\nepisodeNumber.current=res.data.episode_number;setVideos(episodeNumber.current>1?_toConsumableArray(Array(episodeNumber.current-2)).map(function(x,i){return/*#__PURE__*/_jsx(VideosContainer,{idx:i+1});}):[/*#__PURE__*/_jsx(_Fragment,{})]);forceUpdate();});},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"mx-auto mt-10\",children:/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col overflow-auto justify-items-center align-center h-4/5 px-6\",children:videos})});};export default History;","map":{"version":3,"sources":["/Users/kopcion/LearningFromHumanPreferences-master/frontend/src/components/History.tsx"],"names":["axios","React","useEffect","useState","useRef","VideosContainer","useForceUpdate","value","setValue","History","episodeNumber","forceUpdate","videos","setVideos","videoList","console","log","get","then","res","data","current","episode_number","Array","map","x","i"],"mappings":"0SAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,MAArC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,eAAP,KAA4B,iBAA5B,C,gGAEA,QAASC,CAAAA,cAAT,EAAyB,CACvB,cAA0BH,QAAQ,CAAC,CAAD,CAAlC,wCAAOI,KAAP,eAAcC,QAAd,eAAuC;AACvC,MAAO,kBAAMA,CAAAA,QAAQ,CAAC,SAAAD,KAAK,QAAIA,CAAAA,KAAK,CAAG,CAAZ,EAAN,CAAd,EAAP,CAA2C;AAC5C,CAED,GAAME,CAAAA,OAAiB,CAAG,QAApBA,CAAAA,OAAoB,EAAM,CAC9B,GAAMC,CAAAA,aAAa,CAAGN,MAAM,CAAS,CAAT,CAA5B,CACA,GAAMO,CAAAA,WAAW,CAAGL,cAAc,EAAlC,CACA,eAA4BH,QAAQ,CAAgB,cAAC,kBAAD,CAAhB,CAApC,yCAAOS,MAAP,eAAeC,SAAf,eACA,GAAIC,CAAAA,SAAS,CAAG,cAAC,kBAAD,CAAhB,CACAZ,SAAS,CAAC,UAAI,CACZa,OAAO,CAACC,GAAR,CAAY,OAAZ,EACAhB,KAAK,CAACiB,GAAN,oBACGC,IADH,CACQ,SAACC,GAAD,CAAS,CACbJ,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACC,IAAhB,EACA;AACAV,aAAa,CAACW,OAAd,CAAwBF,GAAG,CAACC,IAAJ,CAASE,cAAjC,CACAT,SAAS,CAACH,aAAa,CAACW,OAAd,CAAwB,CAAxB,CAA4B,mBAAIE,KAAK,CAACb,aAAa,CAACW,OAAd,CAAsB,CAAvB,CAAT,EAAoCG,GAApC,CAAwC,SAACC,CAAD,CAAIC,CAAJ,qBAC5E,KAAC,eAAD,EAAiB,GAAG,CAAEA,CAAC,CAAC,CAAxB,EAD4E,EAAxC,CAA5B,CAEN,cAAC,kBAAD,CAFK,CAAT,CAGAf,WAAW,GACZ,CATH,EAUD,CAZQ,CAYP,EAZO,CAAT,CAeA,mBACE,YAAK,SAAS,CAAC,eAAf,uBACE,YAAK,SAAS,CAAC,0EAAf,UACGC,MADH,EADF,EADF,CAOD,CA3BD,CA6BA,cAAeH,CAAAA,OAAf","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState, useRef } from 'react';\nimport VideosContainer from \"./VideosWrapper\"\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nconst History: React.FC = () => {\n  const episodeNumber = useRef<number>(0);\n  const forceUpdate = useForceUpdate();\n  const [videos, setVideos] = useState<JSX.Element[]>([<></>])\n  var videoList = [<></>];\n  useEffect(()=>{\n    console.log('mount');\n    axios.get(`/episode_number`)\n      .then((res) => {\n        console.log(res.data);\n        // setEpisodeNumber(res.data.episode_number);\n        episodeNumber.current = res.data.episode_number;\n        setVideos(episodeNumber.current > 1 ? [...Array(episodeNumber.current-2)].map((x, i) =>\n          <VideosContainer idx={i+1}/>\n        ) : [<></>]);\n        forceUpdate();\n      });\n  },[]);\n\n\n  return (\n    <div className=\"mx-auto mt-10\">\n      <div className=\"flex flex-col overflow-auto justify-items-center align-center h-4/5 px-6\">\n        {videos}\n      </div>\n    </div>\n  );\n};\n\nexport default History;\n"]},"metadata":{},"sourceType":"module"}